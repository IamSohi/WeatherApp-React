{"version":3,"sources":["components/NavBar.js","getWeatherData.js","components/WeatherDisplay.js","components/LocationWeather.js","components/WeatherCard.js","components/MainCard.js","components/Container.js","components/AddButton.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","bar","background","title","textAlign","ButtonAppBar","classes","className","AppBar","position","Toolbar","Typography","variant","location","a","fetch","process","result","status","json","success","data","error","statusText","message","WeatherDisplay","weatherData","React","useMemo","weather","temp","main","Math","round","toString","description","icon","windTransform","wind","deg","windSpeed","speed","Tooltip","style","width","margin","aria-label","Avatar","alt","src","transform","marginLeft","locationText","LocationWeather","onSuccess","useState","setWeatherData","setApiError","useEffect","getWeatherData","getWeather","string","words","split","map","element","charAt","toUpperCase","slice","join","capitalizeString","bgcolor1","backgroundColor","bgcolor2","bgcolor3","bgcolor4","bgcolor5","bgcolor6","bgcolor7","bgcolor8","relativePos","delButton","bottom","right","isSuccess","onDelete","alert","WeatherCard","move","color","Card","IconButton","onClick","zIndex","ButtonBase","previousColor","container","marginTop","Container","weatherLocations","removeLocation","moveItemToFront","Grid","key","item","xs","sm","spacing","MainCard","index","floor","random","generateRandomColor","fab","AddButton","Fab","saveToLocalStorage","locations","localStorage","setItem","JSON","stringify","readFromLocalStorage","storedLocations","getItem","parse","App","setWeatherLocations","open","setOpen","handleClose","newarr","Array","from","unshift","splice","filter","_","locationIndex","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","TextField","autoFocus","label","name","type","fullWidth","DialogActions","Button","document","getElementsByName","value","includes","Boolean","window","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.6a24b2d8.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { CenterFocusStrong } from '@material-ui/icons';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    bar:{\r\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        textAlign: 'center',\r\n        // fontSize: '3em',\r\n    },\r\n}));\r\n\r\nexport default function ButtonAppBar(){\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar className={classes.bar} position = \"static\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h2\" className = {classes.title}>\r\n                        Weather Today\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}","export default async (location) => {\r\n    try{\r\n        const result = await fetch(\r\n            `https://api.openweathermap.org/data/2.5/weather?q=${location}&appid=${process.env.REACT_APP_WEATHER_API_KEY}&units=metric`,\r\n        );\r\n        \r\n        if(result.status === 200){\r\n            return {success: true, data: await result.json()};\r\n\r\n        }\r\n        return {success: false, error: result.statusText};\r\n    }catch(ex){\r\n        return {success:false, error:ex.message};\r\n    }\r\n}","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport ArrowRightAltIcon from \"@material-ui/icons/ArrowRightAlt\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\n\r\nfunction WeatherDisplay({weatherData}){\r\n    const { temp, description, icon, windTransform, windSpeed } = React.useMemo(()=>{\r\n        const [weather] = weatherData.weather || [];\r\n        return{\r\n            temp:weatherData.main && weatherData.main.temp ? Math.round(weatherData.main.temp).toString():\"\",\r\n            description:weather? weather.description:\"\",\r\n            icon:weather?`http://openweathermap.org/img/wn/${weather.icon}@2x.png`:\"\",\r\n            windTransform:weatherData.wind?weatherData.wind.deg-90:null,\r\n            windSpeed:weatherData.wind?Math.round(weatherData.wind.speed):0,\r\n        };\r\n    },[weatherData]);\r\n\r\n    return(\r\n        <>\r\n            {temp && <Typography variant=\"h6\">{temp}&deg;C</Typography>} \r\n            {icon && (\r\n                <Tooltip style={{width:'4em', margin:'0.5em'}} title={description} aria-label={description}>\r\n                    <Avatar  alt={description} src={icon}/>\r\n                </Tooltip>\r\n            )}\r\n            {windSpeed>0 && (\r\n                <>\r\n                    <Typography variant=\"h6\">{`${windSpeed} km/h`}\r\n                    {windTransform !==null &&(\r\n                        <ArrowRightAltIcon style={{transform:`rotateZ(${windTransform}deg)`,marginLeft:'0.5em'}}/>\r\n                    )}\r\n                    </Typography>\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default WeatherDisplay;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport getWeatherData from '../getWeatherData.js';\r\nimport WeatherDisplay from './WeatherDisplay';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    locationText:{\r\n        textAlign:\"center\",\r\n    }\r\n   \r\n  });\r\n  \r\n\r\nfunction capitalizeString(string){\r\n        let words = string.split(' ');\r\n        words = words.map((element)=>(element.charAt(0).toUpperCase()+element.slice(1)))\r\n        return words.join(' ');\r\n    }\r\nfunction LocationWeather({location,onSuccess}){\r\n    const classes=useStyles();\r\n\r\n    const [weatherData, setWeatherData]=React.useState({});\r\n    const [apiError, setApiError]=React.useState(\"\");\r\n    // const [isLoading, ]\r\n\r\n    React.useEffect(()=>{\r\n        const getWeather = async ()=>{\r\n            const result = await getWeatherData(location);\r\n            setWeatherData(result.success ? result.data : onSuccess(false));\r\n            setApiError(result.success ? \"\":result.error);\r\n        };\r\n        getWeather();\r\n        \r\n    },[location]);\r\n\r\n    // const {flagIcon}\r\n    \r\n    return(\r\n        <>\r\n            <div className='fullWidth'>\r\n                <Typography variant=\"h4\" className={classes.locationText}>\r\n                    {capitalizeString(location)}\r\n                </Typography>\r\n                <WeatherDisplay weatherData={weatherData}/>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n\r\n\r\n}\r\n\r\nLocationWeather.propTypes={\r\n    location:PropTypes.string.isRequired,\r\n};\r\n\r\nexport default LocationWeather;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport CardContent from '@material-ui/core/CardActions';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport LocationWeather from './LocationWeather';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\n\r\nconst useStyles = makeStyles({\r\n\r\n  bgcolor1:{\r\n    backgroundColor: '#DAD870',\r\n  },\r\n  bgcolor2:{\r\n    backgroundColor: '#FFCD58',\r\n  },\r\n  bgcolor3:{\r\n    backgroundColor: '#FF9636',\r\n  },\r\n  bgcolor4:{\r\n    backgroundColor: '#FF5C4D',\r\n  },\r\n  bgcolor5:{\r\n    backgroundColor: '#F51663',\r\n  },\r\n  bgcolor6:{\r\n    backgroundColor: '#DEB3AD',\r\n  },\r\n  bgcolor7:{\r\n    backgroundColor: '#FAC218',\r\n  },\r\n  bgcolor8:{\r\n    backgroundColor: '#ADE292',\r\n  },    \r\n  relativePos:{\r\n      position:'relative',\r\n  },\r\n  delButton:{\r\n      position:'absolute',\r\n      bottom:'0.5em',\r\n      right:'0.5em',\r\n      \r\n  }\r\n\r\n\r\n});\r\n\r\nconst isSuccess = (onDelete)=>(status)=>{\r\n  if(!status){\r\n    alert(\"This City does not exist.\")\r\n  }\r\n  return onDelete;\r\n  \r\n}\r\n\r\nfunction WeatherCard({location, onDelete, move, color}){\r\n    const classes=useStyles();\r\n    const dbStyle = {\r\n        position:'absolute',\r\n        zIndex:'1'\r\n      };\r\n    return(\r\n\r\n        <div className='relativePos' >\r\n\r\n        \r\n        <Card className={classes[color]}>\r\n            <IconButton onClick={onDelete} className='delButton' style={dbStyle}>\r\n                <DeleteIcon />\r\n            </IconButton>\r\n            <ButtonBase onClick={move} className=\"fullWidth\">\r\n\r\n\r\n                <CardContent>\r\n\r\n                    {location && <LocationWeather location={location} onSuccess={isSuccess(onDelete)} />}\r\n                </CardContent>\r\n            </ButtonBase>\r\n        </Card>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nWeatherCard.propTypes={\r\n    location:PropTypes.string.isRequired,\r\n    onDelete:PropTypes.func.isRequired,\r\n    // onClick:PropTypes.func.isRequired,\r\n};\r\n\r\nexport default WeatherCard;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport CardContent from '@material-ui/core/CardActions';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport LocationWeather from './LocationWeather';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n\r\n  bgcolor1:{\r\n    backgroundColor: '#DAD870',\r\n  },\r\n  bgcolor2:{\r\n    backgroundColor: '#FFCD58',\r\n  },\r\n  bgcolor3:{\r\n    backgroundColor: '#FF9636',\r\n  },\r\n  bgcolor4:{\r\n    backgroundColor: '#FF5C4D',\r\n  }\r\n});\r\n\r\nfunction WeatherCard({location, onDelete, color}){\r\n    const classes=useStyles();\r\n    const dbStyle = {\r\n        position:'absolute',\r\n      };\r\n    return(\r\n        <div className='relativePos' >\r\n\r\n        \r\n        <Card  className={classes[color]}>\r\n            <IconButton className='delButton' style={dbStyle} onClick={onDelete}>\r\n                    <DeleteIcon/>\r\n                </IconButton>\r\n            <CardContent>\r\n                \r\n                {location && <LocationWeather location={location}/>}\r\n            </CardContent> \r\n        </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nWeatherCard.propTypes={\r\n    location:PropTypes.string.isRequired,\r\n    onDelete:PropTypes.func.isRequired,\r\n};\r\n\r\nexport default WeatherCard;","import React from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport WeatherCard from './WeatherCard';\r\nimport MainCard from './MainCard';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nvar previousColor=1;\r\n\r\nconst useStyles = makeStyles({\r\n  container:{\r\n    marginTop:'2em'\r\n  }\r\n});\r\n\r\nfunction generateRandomColor(){\r\n  var color = Math.floor((Math.random()*8)+2);\r\n  while(color===previousColor){\r\n    color = Math.floor((Math.random()*8)+2);\r\n  }\r\n  previousColor=color;\r\n  return color;\r\n}\r\n\r\n\r\nfunction Container({weatherLocations, removeLocation,moveItemToFront}){\r\n\r\n    var location = weatherLocations[0];\r\n    const classes=useStyles();\r\n    \r\n\r\n    return(\r\n        <Grid key={\"2010\"} container className={classes.container}>\r\n      <Grid key={\"2014\"} item  xs={false} sm={2}/>\r\n      <Grid key={\"2015\"} item  container sm={8} spacing={3}>\r\n\r\n      \r\n        <Grid item key={location} xs={12}\r\n>\r\n          <MainCard className='relativePos' key={\"2009\"}\r\n            location={location}\r\n            color={'bgcolor1'}\r\n            onDelete={removeLocation(0)}\r\n          />\r\n        </Grid>\r\n        \r\n          {weatherLocations.map((location, index) => {\r\n            previousColor=generateRandomColor();\r\n            if(index===0){\r\n              return (\r\n                <>\r\n                </>\r\n              );\r\n            }else{\r\n              return (\r\n                  <Grid item key={location} xs={12} sm={6}>\r\n                    <WeatherCard key={\"2008\"}\r\n                      location={location}\r\n                      color={'bgcolor'+previousColor}\r\n                      onDelete={removeLocation(index)}\r\n                      move={moveItemToFront(index)}\r\n                    />\r\n                  </Grid>\r\n              );\r\n            }\r\n          })\r\n        }\r\n        </Grid>\r\n        <Grid key={\"2016\"} item xs={false} sm={2}/>\r\n      </Grid>\r\n    )\r\n\r\n\r\n}\r\nexport default Container;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nconst useStyles = makeStyles({\r\n  fab:{\r\n    position:'fixed',\r\n    bottom:'4em',\r\n    right:'4em',\r\n  }\r\n});\r\n\r\n\r\nfunction AddButton({onClick}){\r\n    const classes=useStyles();\r\n    return(\r\n        <Fab className={classes.fab}\r\n        onClick={onClick}\r\n        aria-label=\"add weather location\"\r\n        \r\n        color=\"secondary\"\r\n          >\r\n                <AddIcon/>\r\n\r\n      </Fab>\r\n    );\r\n}\r\n\r\nexport default AddButton;","import React from 'react';\nimport './App.css';\nimport NavBar from './components/NavBar';\n\nimport WeatherCard from './components/WeatherCard';\nimport MainCard from './components/MainCard';\nimport Container from './components/Container';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';  \nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport AddButton from './components/AddButton';\n\nconst LOCAL_STORAGE_KEY = \"locations\";\n\nfunction saveToLocalStorage(locations){\n  localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(locations));\n}\n\nfunction readFromLocalStorage(){\n  const storedLocations = localStorage.getItem(LOCAL_STORAGE_KEY);\n  return storedLocations ? JSON.parse(storedLocations):['Vancouver', 'Toronto', 'New York'];\n}\n\n\nfunction App() {\n  \n  const [weatherLocations, setWeatherLocations] = React.useState(readFromLocalStorage);\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleAddClick = () => {\n    let location = document.getElementsByName(\"city\")[0].value;\n    if(weatherLocations.includes(location)){\n      alert(\"This location already exists.\")\n    }else{\n      setWeatherLocations([...weatherLocations,location]);\n      saveToLocalStorage([...weatherLocations,location]);\n      setOpen(false);\n\n\n    }\n\n\n    \n  }\n\n  const updateLocations = (locations) => {\n\n    setWeatherLocations(Array.from(locations));\n    \n    saveToLocalStorage(locations);\n  }\n\n  const removeLocation = (index) => () =>{\n    updateLocations(weatherLocations.filter((_, locationIndex)=>locationIndex !== index));\n  }\n  const moveItemToFront = (index) =>()=>{\n    let newarr = Array.from(weatherLocations);\n    newarr.unshift(newarr.splice(index,1)[0]);\n    setWeatherLocations(newarr);\n    saveToLocalStorage(newarr);\n  }\n\n\n  return (\n    \n    <div key={\"2011\"}>\n      <NavBar key={\"2013\"}/>\n      <Container key={\"2012\"} weatherLocations={weatherLocations} moveItemToFront={moveItemToFront} removeLocation={removeLocation}/>\n      <AddButton\n        onClick={handleClickOpen}>\n      </AddButton>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Add Location</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Enter a City Name:\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"City\"\n            name=\"city\"\n            type=\"text\"\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleAddClick} color=\"primary\">\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}